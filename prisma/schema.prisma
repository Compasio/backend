// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//========TABELAS========

model User {
  //CAMPOS DA TABELA
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String

  //RELAÇÕES
  userType      UserType        @default(voluntary)
  voluntary     Voluntary?
  ong           Ong?
  ongAssociated OngAssociated?
  address       Address?
  UserBlackList UserBlackList[]
  ImageResource ImageResouce[]
}

model Address {
  //CAMPOS DA TABELA
  id_user      Int
  num          String
  street       String @db.VarChar(50)
  neighborhood String @db.VarChar(30)
  city         String @db.VarChar(30)
  state        State
  concat       String
  lat          Float
  lng          Float

  //RELAÇÕES
  user User? @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@id([id_user])
}

model Voluntary {
  //CAMPOS DA TABELA
  id_voluntary  Int
  cpf_voluntary String  @unique @db.VarChar(11)
  fullname      String  @db.VarChar(100)
  description   String? @db.VarChar(200)
  birthDate     String

  //RELAÇÕES
  user               User?                @relation(fields: [id_voluntary], references: [id], onDelete: Cascade)
  habilities         Habilities_User[]
  voluntaryRelations VoluntaryRelations[]
  relationRequests   RelationRequests[]

  @@id([id_voluntary])
}

model Ong {
  //CAMPOS DA TABELA    
  id_ong      Int
  cnpj_ong    String  @unique @db.VarChar(14)
  cpf_founder String  @db.VarChar(11)
  ong_name    String  @db.VarChar(50)
  description String? @db.VarChar(200)

  //RELAÇÕES
  user               User?                @relation(fields: [id_ong], references: [id], onDelete: Cascade)
  themes             Themes_ONG[]
  voluntaryRelations VoluntaryRelations[]
  ongAssociates      OngAssociated[]
  projects           Project[]
  relationRequests   RelationRequests[]
  neededItems        NeededItems[]

  @@id([id_ong])
}

model OngAssociated {
  //CAMPOS DA TABELA
  id_associate Int
  ong          Int
  firstname    String @db.VarChar(50)
  lastname     String @db.VarChar(70)

  //RELAÇÕES
  user        User          @relation(fields: [id_associate], references: [id], onDelete: Cascade)
  id_ong      Ong           @relation(fields: [ong], references: [id_ong], onDelete: Cascade)
  permissions Permissions[]

  @@id([id_associate])
}

//model UserAppData {
//CAMPOS DA TABELA
//  id_user Int
//TODO---TERMINAR TABELA USERAPPDATA

//RELAÇÕES
//  user User         @relation(fields: [id_user], references: [id_user])

//  @@id([id_user])
//}

model VoluntaryRelations {
  //CAMPOS DA TABELA
  id_relation Int     @id @default(autoincrement())
  voluntary   Int
  ong         Int
  project     Int?
  dateStart   String?
  dateEnding  String?
  description String? @db.VarChar(200)

  //RELAÇÕES
  id_voluntary Voluntary @relation(fields: [voluntary], references: [id_voluntary], onDelete: Cascade)
  id_ong       Ong       @relation(fields: [ong], references: [id_ong], onDelete: Cascade)
  id_project   Project?  @relation(fields: [project], references: [id_project], onDelete: Cascade)
}

model RelationRequests {
  //CAMPOS DA TABELA
  voluntary            Int
  ong                  Int
  project              Int?
  userTypeWhoRequested UserType

  //RELAÇÕES
  id_voluntary Voluntary @relation(fields: [voluntary], references: [id_voluntary], onDelete: Cascade)
  id_ong       Ong       @relation(fields: [ong], references: [id_ong], onDelete: Cascade)
  id_project   Project?  @relation(fields: [project], references: [id_project], onDelete: Cascade)

  @@id([voluntary, ong])
}

model Project {
  //CAMPOS DA TABELA
  id_project   Int     @id @default(autoincrement())
  ong          Int
  project_name String  @db.VarChar(50)
  description  String? @db.VarChar(200)

  //RELAÇÕES
  voluntaryRelations VoluntaryRelations[]
  relationRequests   RelationRequests[]
  theme              Themes_ONG[]
  id_ong             Ong                  @relation(fields: [ong], references: [id_ong], onDelete: Cascade)
}

model CrowdFunding {
  //CAMPOS DA TABELA
  id_crowdfunding Int     @id @default(autoincrement())
  title           String  @db.VarChar(70)
  description     String? @db.VarChar(150)
  project         Int
  neededValue     Float
  collectedValue  Float   @default(0)
  isClosed        Boolean @default(false)
  stripe_id       String
  stripe_price_id String

  //RELAÇÕES
  donationHistory DonationHistory[]
}

model DonationHistory {
  //CAMPOS DA TABELA
  id_donation     Int    @id @default(autoincrement())
  voluntary       Int
  crowdfunding    Int
  value           Float
  date            String
  stripe_checkout String

  //RELAÇÕES
  id_crowdfunding CrowdFunding? @relation(fields: [crowdfunding], references: [id_crowdfunding])
}

model NeededItems {
  id          Int       @id @default(autoincrement())
  ong         Int
  itemName    String    @db.VarChar(50)
  description String
  itemClass   ItemClass
  itemPhoto   Bytes
  quantity    Int

  id_ong Ong @relation(fields: [ong], references: [id_ong], onDelete: Cascade)
}

model SysLogs {
  //CAMPOS DA TABELA
  log_time DateTime @id @default(now())
  //TODO---TERMINAR TABELA SYSLOGS

  //RELAÇÕES
}

model UserBlackList {
  id_user Int
  user    User? @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@id([id_user])
}

model EmailVerifyCode {
  code      String @id @db.VarChar(6)
  dto       String
  iv        Bytes
  createdAt BigInt
  imgId     String
  imgUrl    String
}

model PasswordRecCode {
  code      String @id @db.VarChar(6)
  userEmail String
  createdAt BigInt
}

model TokenBlackList {
  token String @id
}

model ImageResouce {
  id        Int     @id @default(autoincrement())
  url       String
  user      Int
  type      ImgType
  cloudName String

  userid User? @relation(fields: [user], references: [id], onDelete: Cascade)
}

//=======================

//=========ENUMS=========

enum UserType {
  voluntary
  ong
  ongAssociated
  admin
}

enum Permissions {
  donation
  voluntary
  projects
  total
}

enum ImgType {
  profile
  galery
  project
}

enum ItemClass {
  ROUPAS
  ALIMENTOS
  BEBIDAS
  BRINQUEDOS
  UTENSILIOS
  MOVEIS
  OUTROS
}

enum State {
  AC
  AL
  AP
  AM
  BA
  CE
  DF
  ES
  GO
  MA
  MT
  MS
  MG
  PA
  PB
  PR
  PE
  PI
  RJ
  RN
  RS
  RO
  RR
  SC
  SP
  SE
  TO
}

enum Habilities_User {
  COMUNICACAO_EFICAZ
  HABILIDADE_INTERPESSOAL
  ESCUTA_ATIVA
  EMPATIA
  TRABALHO_EM_EQUIPE
  LIDERANCA
  RESOLUCAO_DE_CONFLITOS
  FACILITACAO_DE_GRUPOS
  MEDIACAO
  NEGOCIACAO
  CONSTRUCAO_DE_REDE_DE_CONTATOS
  APRESENTACAO_EM_PUBLICO
  PROATIVIDADE
  RESPONSABILIDADE
  COMPROMETIMENTO
  PONTUALIDADE
  CONFIABILIDADE
  FLEXIBILIDADE
  ADAPTABILIDADE
  CRIATIVIDADE
  INICIATIVA
  MOTIVACAO
  AUTOCONHECIMENTO
  RESILIENCIA
  GESTAO_DO_TEMPO
  ORGANIZACAO
  ATENCAO_AOS_DETALHES
  PENSAMENTO_CRITICO
  SOLUCAO_DE_PROBLEMAS
  TOMA_DE_DECISAO
  INFORMATICA
  INTERNET
  REDES_SOCIAIS
  MARKETING_DIGITAL
  DESIGN_GRAFICO
  EDICAO_DE_VIDEO
  FOTOGRAFIA
  TRADUCAO
  INTERPRETACAO
  PRIMEIROS_SOCORROS
  ENFERMAGEM
  EDUCACAO
  PEDAGOGIA
  PSICOLOGIA
  DIREITO
  CONTABILIDADE
  ADMINISTRACAO
  FINANCAS
  LOGISTICA
  AGRONOMIA
  VETERINARIA
  MEIO_AMBIENTE
  DESENVOLVIMENTO_SUSTENTAVEL
  ATUALIDADES
  CULTURA_GERAL
  DIVERSIDADE
  INCLUSAO
  SUSTENTABILIDADE
  DIREITOS_HUMANOS
  CIDADANIA
  VOLUNTARIADO
  SETOR_SOCIAL
  TERCEIRO_SETOR
  ONGS
  PORTUGUES
  INGLES
  ESPANHOL
  OUTROS_IDIOMAS
  RELACOES_PUBLICAS
  CAPTACAO_DE_RECURSOS
  GESTAO_DE_PROJETOS
  COORDENACAO_DE_EVENTOS
  GERENCIAMENTO_DE_CRISES
  TREINAMENTO
  MENTORIA
  CONSULTORIA
  AUDITORIA
  ANALISE_DE_DADOS
  PESQUISA
  ADVOCACIA
  SOCIOLOGIA
  ANTROPOLOGIA
  MEDICINA
  FISIOTERAPIA
  TERAPIA_OCUPACIONAL
  EDUCACAO_FISICA
  BIOLOGIA
  ECOLOGIA
  ARTES
  ARTESANATO
  MUSICA
  TEATRO
  DANCA
  ESCULTURA
  PINTURA
  ILUSTRACAO
  ESCRITA_CREATIVA
  LITERATURA
  BIBLIOTECONOMIA
  ARQUIVOLOGIA
}

enum Themes_ONG {
  EDUCACAO
  SAUDE
  ALIMENTACAO
  MORADIA
  MEIO_AMBIENTE
  DIREITOS_HUMANOS
  ANIMAIS
  CRIANCAS
  ADOLESCENTES
  IDOSOS
  MULHERES
  IMIGRANTES
  REFUGIADOS
  DESASTRES_NATURAIS
  AJUDA_HUMANITARIA
  DEFICIENCIA
  REABILITACAO
  EDUCACAO_INCLUSIVA
  CULTURA
  ARTE
  ESPORTE
  LAZER
  EMPREGABILIDADE
  FORMACAO_PROFISSIONAL
  ORIENTACAO_PROFISSIONAL
  DESENVOLVIMENTO_COMUNITARIO
  DEFESA_CIVIL
  SEGURANCA_ALIMENTAR
  HIGIENE
  SANEAMENTO_BASICO
  SAUDE_MENTAL
  APOIO_PSICOLOGICO
  PREVENCAO_DE_DOENCAS
  PROMOCAO_DA_SAUDE
  ATENDIMENTO_ODONTOLOGICO
  CIDADANIA
  PARTICIPACAO_POLITICA
  DEFESA_DOS_DIREITOS
  EDUCACAO_AMBIENTAL
  SUSTENTABILIDADE
  CONSERVACAO
  PRESERVACAO
  RESGATE_DE_ANIMAIS
  ADOTACAO_DE_ANIMAIS
  PROTECAO_DE_ANIMAIS
  AGRICULTURA_SUSTENTAVEL
  HORTAS_COMUNITARIAS
  PERMACULTURA
  RECICLAGEM
  REDUCAO_DE_RESIDUOS
  TECNOLOGIA
  INOVACAO
  INCLUSAO_DIGITAL
  EDUCACAO_FINANCEIRA
  PLANEJAMENTO_FAMILIAR
  SEGURANCA
  DEFESA_DA_INFANCIA
  COMBATE_AO_TRABALHO_INFANTIL
  PROTECAO_AO_CONSUMIDOR
  COMBATE_AO_RACISMO
  COMBATE_AO_PRECONCEITO
  PROMOCAO_DA_IGUALDADE
  TURISMO_SUSTENTAVEL
  DESENVOLVIMENTO_TURISTICO
  TURISMO_COMUNITARIO
  HABITACAO_POPULAR
  URBANISMO
  PLANEJAMENTO_URBANO
  TRANSPORTE
  MOBILIDADE_URBANA
  VOLUNTARIADO_CORPORATIVO
  ENGAJAMENTO_COMUNITARIO
  FORMACAO_DE_LIDERANCAS
  JOVENS
  REINSERCAO_SOCIAL
  EDUCACAO_DE_JOVENS_E_ADULTOS
  ALFABETIZACAO
  PREPARACAO_PARA_O_ENEM
  CURSINHO_POPULAR
  EDUCACAO_A_DISTANCIA
  ATENDIMENTO_SOCIAL
  SERVICO_SOCIAL
  ASSISTENCIA_JURIDICA
  CAPTACAO_DE_RECURSOS
  TRANSPARENCIA
  BOAS_PRATICAS
  GESTAO_DE_PROJETOS
  MONITORAMENTO_E_AVALIACAO
  PESQUISA_SOCIAL
  ADVOCACY
  CAMPANHAS
  COMUNICACAO
  MARKETING
  MOBILIZACAO
  PARCERIAS
  COOPERACAO_INTERNACIONAL
  INTERCAMBIO_CULTURAL
  FESTIVAIS
  EVENTOS_CULTURAIS
}

//=======================
